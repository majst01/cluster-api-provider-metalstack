# this is a temporary mock
kind: KubeadmConfig
apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
metadata:
  name: "${CLUSTER_NAME}-control-plane1-config"
spec:
 preKubeadmCommands:
  - echo "waiting for the network"
  - sleep 150
  - echo "preKubeadmCommands run"
  - sudo apt-get update && sudo apt-get install -y apt-transport-https curl
  - curl -sS https://packages.cloud.google.com/apt/doc/apt-key.gpg -o key
  - echo $(wc key)
  - sudo apt-key add key
  - sudo rm key
  - echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
  - sudo apt-get update
  - sudo apt-get install -y kubelet=1.18.9-00 kubeadm=1.18.9-00 kubectl=1.18.9-00
  - sudo apt-mark hold kubelet kubeadm kubectl
  - kubeadm config migrate --old-config /tmp/kubeadm.yaml --new-config /tmp/new_kubeadm.yaml
  - sudo rm /tmp/kubeadm.yaml && sudo mv /tmp/new_kubeadm.yaml /tmp/kubeadm.yaml
  - echo "preKubeadmCommands finished"
  postKubeadmCommands: 
  - sudo kubeadm init --config=/tmp/kubeadm.yaml --ignore-preflight-errors=NumCPU
  initConfiguration:
    localAPIEndpoint:
      advertiseAddress: "100.255.254.1"
      bindPort: 6443
    nodeRegistration:
      kubeletExtraArgs:
        cloud-provider: external
  clusterConfiguration:
    controllerManager:
      extraArgs:
        enable-hostpath-provisioner: "true"
---
apiVersion: cluster.x-k8s.io/v1alpha3
kind: Cluster
metadata:
  name: "${CLUSTER_NAME}"
spec:
  clusterNetwork:
    pods:
      cidrBlocks: ["${POD_CIDR}"]
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
    kind: MetalStackCluster
    name: "${CLUSTER_NAME}"
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
kind: MetalStackCluster
metadata:
  name: "${CLUSTER_NAME}"
spec:
  controlPlaneEndpoint:
    host: "100.255.254.3"
    port: 6443
  firewall:
    defaultNetworkID: internet-vagrant-lab
    image: "firewall-ubuntu-2.0"
    size: "v1-small-x86"
  partition: "${PARTITION}"
  projectID: "${PROJECT_ID}"
---
apiVersion: cluster.x-k8s.io/v1alpha3
kind: Machine
metadata:
  name: "${CLUSTER_NAME}-master-0"
  labels:
    cluster.x-k8s.io/cluster-name: ${CLUSTER_NAME}
    cluster.x-k8s.io/control-plane: "true"
spec:
  clusterName: "${CLUSTER_NAME}"
  bootstrap:
    configRef:
      kind: KubeadmConfig
      apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
      name: "${CLUSTER_NAME}-control-plane1-config"
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
    kind: MetalStackMachine
    name: "${CLUSTER_NAME}-master-0"
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
kind: MetalStackMachine
metadata:
  name: "${CLUSTER_NAME}-master-0"
spec:
  image: "${NODE_IMAGE}"
  providerID: metalstack://e0ab02d2-27cd-5a5e-8efc-080ba80cf258
  partition: "${PARTITION}"
  machineType: "${MASTER_NODE_TYPE}"
  sshKeys:
    - "${SSH_KEY}"
  tags: []
---
apiVersion: cluster.x-k8s.io/v1alpha3
kind: MachineDeployment
metadata:
  name: ${CLUSTER_NAME}-worker-a
  labels:
    cluster.x-k8s.io/cluster-name: ${CLUSTER_NAME}
    pool: worker-a
spec:
  replicas: ${WORKER_MACHINE_COUNT}
  clusterName: ${CLUSTER_NAME}
  selector:
    matchLabels:
      cluster.x-k8s.io/cluster-name: ${CLUSTER_NAME}
      pool: worker-a
  template:
    metadata:
      labels:
        cluster.x-k8s.io/cluster-name: ${CLUSTER_NAME}
        pool: worker-a
    spec:
      version: ${KUBERNETES_VERSION}
      clusterName: ${CLUSTER_NAME}
      bootstrap:
        configRef:
          name: ${CLUSTER_NAME}-worker-a
          apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
          kind: KubeadmConfigTemplate
      infrastructureRef:
        name: ${CLUSTER_NAME}-worker-a
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
        kind: MetalStackMachineTemplate
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
kind: MetalStackMachineTemplate
metadata:
  name: ${CLUSTER_NAME}-worker-a
spec:
  template:
    spec:
      image: "${NODE_IMAGE}"
      machineType: "${WORKER_NODE_TYPE}"
      partition: "${PARTITION}"
      sshKeys:
        - "${SSH_KEY}"
      tags: []
---
kind: KubeadmConfigTemplate
apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
metadata:
  name: "${CLUSTER_NAME}-worker-a"
spec:
  template:
    spec:
      preKubeadmCommands: []
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs:
            cloud-provider: external
